@import url("https://fonts.googleapis.com/css2?family=Be+Vietnam+Pro:wght@400;500;700&display=swap");

:root {
  --clr-accent-500: hsl(12, 60%, 45%);
  --clr-accent-400: hsl(12, 88%, 59%);
  --clr-accent-300: hsl(12, 88%, 75%);

  --clr-accent-100: hsl(13, 100%, 96%);

  --clr-primary-400: hsl(228, 39%, 23%);

  --clr-neutral-900: hsl(233, 12%, 13%);
  --clr-neutral-200: hsl(0, 0%, 97%);

  --clr-neutral-100: hsl(0, 0%, 100%);

  --font-family-primary: "Be Vietnam Pro", sans-serif;
  --font-family-body: var(--font-family-primary);
  --font-family-heading: var(--font-family-primary);

  --font-weight-regular: 400;
  --font-weight-semi-bold: 500;
  --font-weight-bold: 700;

  --font-size-300: 0.8125rem;
  --font-size-400: 0.875rem;
  --font-size-500: 0.9375rem;
  --font-size-600: 1rem;
  --font-size-700: 1.875rem;
  --font-size-800: 2.5rem;
  --font-size-900: 3.5rem;

  --font-size-body: var(--font-size-400);
  --font-size-primary-heading: var(--font-size-800);
  --font-size-secondary-heading: var(--font-size-700);
  --font-size-nav: var(--font-size-500);
  --font-size-button: var(--font-size-300);

  --size-100: 0.25rem;
  --size-200: 0.5rem;
  --size-300: 0.75rem;
  --size-400: 1rem;
  --size-500: 1.25rem;
  --size-600: 2rem;
  --size-700: 3rem;
  --size-800: 4rem;
  --size-900: 5rem;
}

@media (min-width: 50em) {
  :root {
    --font-size-primary-heading: var(--font-size-900);
    --font-size-secondary-heading: var(--font-size-800);
    --font-size-body: var(--font-size-500);
    --font-size-nav: var(--font-size-300);
  }
}

/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default margin */
* {
  margin: 0;
  padding: 0;
  font: inherit;
}

/* Remvoe list styles on ul, ol elements */

ul[role="list"],
ol[role="list"] {
  list-style: none;
}

/* Set core root defaults */

html:focus-within {
  scroll-behavior: smooth;
}

/* We use html, body { height: 100%; } to ensure the page can take full viewport height, allowing child elements (like full-page sections or layouts) to use 100% height reliably. */
html,
body {
  height: 100%;
}

/* Set core body defaults */

body {
  text-rendering: optimizeSpeed;
  line-height: 1.5;
}

/* A elements that don't have a class get default styling */

a:not([class]) {
  text-decoration-skip-ink: auto;
}

/*  Make images easier to work with */

img,
picture,
svg {
  max-width: 100%;
  display: block;
}

/* Removes all animations, transitions and smooth-behavior */

@media (prefers-reduced-motion: reduce) {
  html:focus-within {
    scroll-behavior: auto;
  }
}

*,
*::before,
*::after {
  animation-duration: 0.01ms !important;
  animation-iteration-count: 1 !important;
  transition-duration: 0.01ms !important;
  scroll-behavior: auto !important;
}

/* General styling */

body {
  font-size: var(--font-size-body);
  font-family: var(--font-family-body);
  color: var(--clr-primary-400);
}

p:not([class]) {
  opacity: 0.7;
  max-width: 32ch;
}

/* The square brackets [] are part of the attribute selector */
p[data-width="wide"] {
  max-width: 42ch;
}

/* button */

.button {
  display: inline-flex;
  cursor: pointer;
  text-decoration: none;
  border: 0;
  border-radius: 100vmax;
  padding: 1.25em 2.5em;
  font-weight: var(--font-weight-bold);
  font-size: var(--font-size-button);
  color: var(--clr-neutral-100);
  line-height: 1;
  background-color: var(--clr-accent-400);
  box-shadow: 0 1.125em 1em -1em var(--clr-accent-500);
}

.button[data-type="inverted"] {
  background-color: var(--clr-neutral-100);
  color: var(--clr-accent-400);
}

.button[data-shadow="none"] {
  box-shadow: none;
}

.button[data-type="inverted"]:hover,
.button[data-type="inverted"]:focus-visible {
  background-color: var(--clr-neutral-100);
  color: var(--clr-accent-300);
}

.button:hover,
.button:focus-visible {
  background-color: var(--clr-accent-300);
}

/* navbar */

.primary-header {
  margin-top: var(--size-700);
}

.nav-wrapper {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.mobile-nav-toggle {
  display: none;
}

.nav-list {
  font-size: var(--font-size-nav);
}

.nav-list {
  display: flex;
  gap: clamp(var(--size-400), 5vw, var(--size-700));
  font-weight: var(--font-weight-semi-bold);
}

.nav-list a {
  text-decoration: none;
  color: var(--clr-primary-400);
}

.nav-list a:hover,
.nav-list a:focus {
  text-decoration: none;
  color: var(--clr-accent-400);
}

@media (max-width: 50em) {
  .primary-navigation {
    display: none;
    position: absolute;
    padding: var(--size-700);
    inset: 7rem var(--size-400) auto;
    max-width: 25rem;
    margin-left: auto;
    background: var(--clr-neutral-100);
    border-radius: var(--size-100);
    box-shadow: 0 0 0.75em rgb(0, 0, 0, 0.05);
  }

  .primary-navigation::after {
    content: "";
    position: absolute;
    inset: 0;
  }

  .nav-list {
    display: grid;
    gap: var(--size-600);
    text-align: center;
    font-weight: var(--font-weight-bold);
  }

  .primary-navigation[data-visible] {
    display: block;
  }

  .mobile-nav-toggle {
    display: block;
    cursor: pointer;
    background: transparent;
    border: 0;
    padding: 0.5em;
  }

  .mobile-nav-toggle .icon-close {
    display: none;
  }
}

.opened {
  display: block;
  position: fixed;
}

/* footer */

.primary-footer {
  --logo-color: var(var(--clr-neutral-100));
}

.primary-footer-wrapper {
  display: grid;
  gap: var(--size-700);
  grid-template-areas:
    "form"
    "nav"
    "logo-social";
}

/* Learned new stuff here */
@media (min-width: 50em) {
  .primary-footer-wrapper {
    grid-template-areas: "logo-social nav form";
  }

  .primary-footer-logo-social {
    align-items: flex-start;
    justify-content: space-between;
    gap: var(--size-700);
  }
}

.primary-footer-logo-social {
  grid-area: logo-social;
  display: flex;
  flex-direction: column-reverse;
  justify-content: center;
  gap: var(--size-700);
}

.primary-footer-nav {
  grid-area: nav;
}

.primary-footer-form {
  grid-area: form;
}

.primary-footer form {
  display: flex;
  gap: var(--size-200);
}

input:where([type="text"], [type="email"], ) {
  border-radius: 100vw;
  border: 0;
  padding: var(--size-300) var(--size-400);
}

@media (max-width: 50em) {
  .primary-footer-wrapper > * {
    margin-inline: auto;
  }
}

/* Footer nav */

.footer-nav {
  columns: 2;
  gap: clamp(var(--size-200), 30vw, var(--size-900));
}

.footer-nav a {
  color: var(--clr-neutral-100);
  text-decoration: none;
}

.footer-nav a:is(:hover, :focus) {
  color: var(--clr-accent-400);
}

/* social list */
.social-list {
  display: flex;
  gap: var(--size-600);
}

.social-icon {
  width: var(--size-600);
  aspect-ratio: 1;
  fill: var(--clr-neutral-100);
}

.social-list a:is(:hover, :focus) .social-icon {
  fill: var(--clr-accent-400);
}
@media (min-width: 50em) {
  .social-list {
    gap: var(--size-300);
  }

  .social-icon {
    width: var(--size-500);
  }
}

/* cta */

.cta {
  position: relative;
  isolation: isolate;
  text-align: center;
}

@media (min-width: 50em) {
  .cta {
    text-align: left;
  }
}

.cta::before {
  content: "";
  position: absolute;
  z-index: -1;
  inset: 0;
  background-image: url("images/bg-tablet-pattern.svg"),
    url("images/bg-tablet-pattern.svg");
  /* Kept rem here but to be fixed */
  background-position: -15rem -5rem, 80rem -42rem;
  background-repeat: no-repeat;
  opacity: 0.1;
}

/* numbered-items */

.text-center {
  text-align: center;
}

.text-center p {
  margin-inline: auto;
}

@media (max-width: 50em) {
  .text-center-sm-only {
    text-align: center;
  }

  .text-center-sm-only p {
    margin-inline: auto;
  }
}

.numbered-items {
  counter-reset: count;
  width: fit-content;
  margin-inline: auto;
}

.numbered-items li {
  counter-increment: count;
}

.numbered-items div {
  display: grid;
  position: relative;
  grid-template-columns: min-content 1fr;
  column-gap: var(--size-300);
  align-items: center;
}

.numbered-items p {
  grid-column: 1 / -1;
}

.numbered-items__title {
  grid-row: 1 / 2;
  grid-column: 2 / 3;
  line-height: 1;
}

.numbered-items div::before,
.numbered-items div::after {
  height: 40px;
}

.numbered-items div::before {
  content: "0" counter(count);
  display: flex;
  align-items: center;
  background-color: var(--clr-accent-400);
  color: var(--clr-neutral-100);
  font-weight: var(--font-weight-bold);
  padding: var(--size-100) var(--size-400);
  border-radius: 100vw;
  grid-row: 1 / 2;
  grid-column: 1 / 2;
}

@media (min-width: 30em) {
  .numbered-items p {
    grid-column: 2 / -1;
  }
}

@media (max-width: 30em) {
  .numbered-items div::after {
    --bg: var(--clr-accent-100);
    content: "";
    display: block;
    z-index: -1;
    border-radius: 100vw 0 0 100vw;
    grid-column: 1 / -1;
    grid-row: 1 / 2;
    box-shadow: 5em 0 0 var(--bg);
    background: var(--bg);
  }
}

/* Slider */

.carousel-styles {
  background-color: var(--clr-neutral-200);
  padding: var(--size-500);
  line-height: 1.5rem;
  margin: 1.5rem 0;
}

.carousel-styles img {
  width: var(--size-800);
  top: 0;
  left: 700px;
  margin-inline: auto;
}

/* Utility classes */

.visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

/* The 100% means the body size (screen size - 32px) and if the given max-width exceeds above then it will take the value of max-width but it is smaller then it will take that. with padding of 1rem left and right */
.container {
  --max-width: 1110px;
  --padding: 1rem;

  width: min(var(--max-width), 100% - (var(--padding) * 2));
  margin-inline: auto;
}

.even-columns {
  display: grid;
  gap: 1rem;
}

.justify-self-end {
  justify-self: end;
}

.vertical-align-center {
  align-items: center;
}

@media (min-width: 50em) {
  .justify-self-end-md {
    justify-self: end;
  }
}

:where(.flow :not(:first-child)) {
  /* This means if their is no value for flow-spacer then 3em will be used */
  margin-top: var(--flow-spacer, 3em);
}

@media (min-width: 50em) {
  .even-columns {
    grid-auto-flow: column;
    grid-auto-columns: 1fr;
  }
}

.text-primary-400 {
  color: var(--clr-primary-400);
}

.text-accent-400 {
  color: var(--clr-accent-400);
}

.text-primary-100 {
  color: var(--clr-accent-100);
}

.text-neutral-100 {
  color: var(--clr-neutral-100);
}

.text-neutral-900 {
  color: var(--clr-neutral-900);
}

/* BG */

.bg-primary-400 {
  background-color: var(--clr-primary-400);
}

.bg-accent-400 {
  background-color: var(--clr-accent-400);
}

.bg-primary-100 {
  background-color: var(--clr-accent-100);
}

.bg-neutral-100 {
  background-color: var(--clr-neutral-100);
}

.bg-neutral-900 {
  background-color: var(--clr-neutral-900);
}

/* Font weight */

.fw-bold {
  font-weight: var(--font-weight-bold);
}
.fw-semi-bold {
  font-weight: var(--font-weight-semi-bold);
}
.fw-regular {
  font-weight: var(--font-weight-regular);
}

.fs-primary-heading {
  font-size: var(--font-size-primary-heading);
  line-height: 1.1;
}

.fs-secondary-heading {
  font-size: var(--font-size-secondary-heading);
  line-height: 1.1;
}

/* Font size */

.fs-300 {
  font-size: var(--font-size-300);
}
.fs-400 {
  font-size: var(--font-size-400);
}
.fs-500 {
  font-size: var(--font-size-500);
}
.fs-600 {
  font-size: var(--font-size-600);
}

.padding-block-900 {
  padding-block: var(--size-900);
}

.padding-block-700 {
  padding-block: var(--size-700);
}

.margin-bottom-700 {
  margin-block-end: var(--size-700);
}

.display-sm-none {
  display: none;
}

@media (min-width: 50em) {
  .display-md-block {
    display: inline-flex;
  }
}
